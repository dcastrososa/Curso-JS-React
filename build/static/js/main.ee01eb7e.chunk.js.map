{"version":3,"sources":["utility.js","cars.js","Containers/Login/Login.js","Containers/Login/validations.js","store/actions/auth.js","store/actions/actionTypes.js","Components/Vehicles/DetailVehicle/DetailVehicle.js","Components/Vehicles/NewVehicle/validations.js","tags.js","Components/Vehicles/NewVehicle/NewVehicle.js","Containers/Vehicles/Vehicles.js","Components/Routes/Routes.js","App.js","store/reducers/auth.js","serviceWorker.js","index.js"],"names":["updateObject","oldObject","updatedProperties","Object","objectSpread","spaceValidation","value","trim","success","text","message","error","searchIndexCars","key","cars","index","forEach","car","i","preventLetters","e","tecla","document","all","keyCode","which","te","String","fromCharCode","test","preventDefault","Cars","CarsRaw","classCallCheck","this","user","pass","id","brand","year","madein","maxspeed","description","colors","ports","status","newcar","push","Login","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","errors","handleSubmit","bind","assertThisInitialized","inputChangeHandler","event","name","target","setState","defineProperty","data","valid","validation","validData","validateData","onSetSesion","onSetRedirect","history","_this$state","react_default","a","createElement","className","card","es_form","onSubmit","Item","input","prefix","icon","type","style","color","placeholder","onChange","es_button","htmlType","map","es_alert","React","Component","withRouter","connect","redirect","auth","dispatch","actions","DetailVehicle","vehicle","row","validYear","length","Tags","addTag","tag","tags","indexOf","removeTag","splice","getTag","existTag","Array","NewVehicle","addColor","keyAddColor","join","insertCar","onSave","onKeyPress","closable","onClick","Column","Table","ColumnGroup","Vehicles","showFormNewVehicle","showDetailVehicle","vehicleCurrent","orderCars","delete","switchFormNewVehicle","switchDetailVehicle","updateStatus","vehicleSaved","getCars","newStatus","toConsumableArray","concat","err","_this2","Fragment","table","dataSource","title","dataIndex","render","record","popconfirm","okText","cancelText","onConfirm","modal","visible","onOk","handleOk","onCancel","Vehicles_NewVehicle_NewVehicle","Vehicles_DetailVehicle_DetailVehicle","RoutesWithSesion","Switch","Route","path","component","exact","Redirect","to","RoutesWithoutSesion","App","loading","isAuthenticated","Routes_RoutesWithSesion","Routes_RoutesWithoutSesion","initialState","reducer","arguments","undefined","action","setSesion","setRedirect","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","basename","src_App_0","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee01eb7e.chunk.js","sourcesContent":["import { message } from 'antd';\n\nexport const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  }\n}\n\n// devuelve false si una cadena esta vacia.\nexport const spaceValidation = value => {\n  return value.trim('') !== '';\n}\n\nexport const success = text => {\n  message.success(text);\n};\n\nexport const error = text => {\n  message.error(text);\n};\n\nexport const searchIndexCars = (key, cars) => {\n  let index = -1;\n  cars.forEach((car, i) => {\n    if (car.key === key) {\n      index = i;\n      return;\n    }\n  })\n\n  if (index === -1) {\n    throw \"No existe este carro en el arreglo.\";\n  }\n  return index;\n}\n\n// impide que se escriban letras en un input\nexport const preventLetters = e => {\n\tlet tecla = ( document.all ) ? e.keyCode : e.which;\n  if ( tecla == 13 || tecla == 8 )\n    return true;\n  let patron = /[1234567890\\d]/;\n  let te = String.fromCharCode( tecla );\n  const test = patron.test( te );\n  if (!test) {\n    e.preventDefault();\n  }\n  return test;\n}","class CarsRaw {\r\n  constructor() {\r\n    this.user = \"phinxlab\";\r\n    this.pass = \"abc123\";\r\n\r\n    this.cars = [\r\n      {\r\n        id: 1,\r\n        brand: \"ferrari\",\r\n        year: \"1950\",\r\n        madein: \"italia\",\r\n        maxspeed: \"150\",\r\n        description: \"Ultimo modelo\",\r\n        colors: \"Amarillo / Azul / Rojo / Verde / Negro / Blanco\",\r\n        ports: 4,\r\n        status: 1\r\n      },\r\n      {\r\n        id: 2,\r\n        brand: \"porche\",\r\n        year: \"1988\",\r\n        madein: \"alemania\",\r\n        maxspeed: \"154\",\r\n        description: \"Ultimo modelo\",\r\n        colors: \"Amarillo / Azul / Rojo / Verde / Negro / Blanco\",\r\n        ports: 4,\r\n        status: 1\r\n      },\r\n      {\r\n        id: 3,\r\n        brand: \"subaru\",\r\n        year: \"1977\",\r\n        madein: \"japon\",\r\n        maxspeed: \"120\",\r\n        description: \"Ultimo modelo\",\r\n        colors: \"Amarillo / Azul / Rojo / Verde / Negro / Blanco\",\r\n        ports: 4,\r\n        status: 1\r\n      }\r\n    ];\r\n\r\n    \r\n  }\r\n\r\n  getCars() {\r\n    return this.cars;\r\n  }\r\n\r\n  insertCar(newcar) {\r\n    return this.cars.push(newcar);\r\n  }\r\n\r\n}\r\n\r\nexport const Cars = new CarsRaw();\r\n","import React from 'react';\nimport {\n  Form, Icon, Input, Button, Alert,\n  Card\n} from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from './../../store/actions/index';\nimport { validation, validateData } from './validations';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: 'phinxlab',\n      pass: 'abc123',\n      errors: []\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n  }\n\n  inputChangeHandler(event) {\n    const name = event.target.name;\n    this.setState({[name]: event.target.value})\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const data = {user: this.state.user, pass: this.state.pass}\n    const valid = validation(data); \n    if (!valid.valid) {\n      this.setState({errors: valid.errors})\n      return;\n    }\n\n    this.setState({errors: []});\n\n    const validData = validateData(data);\n\n    if (!validData.valid) {\n      this.setState({errors: validData.errors})\n      return;\n    }\n\n    this.props.onSetSesion();\n    this.props.onSetRedirect(true);\n    this.props.history.push('/vehicles');\n    this.props.onSetRedirect(false);\n  }\n\n  render() {\n    const {errors, user, pass} = this.state;\n\n    return(\n      <div className=\"containerLogin\">\n        <Card className=\"cardLogin\">\n          <p className=\"titleLogin\">ACCOUNT LOGIN</p>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\" id=\"components-form-demo-normal-login\">\n            <Form.Item>\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" name=\"user\" value={user} onChange={this.inputChangeHandler} />\n            </Form.Item>\n            <Form.Item>\n              <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" name=\"pass\" placeholder=\"Password\" value={pass} onChange={this.inputChangeHandler} />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                Log in\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n        <br />\n        {errors.map((error, i) => (\n          <Alert\n            key={i}\n            message=\"Error\"\n            description={error}\n            type=\"error\"\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetSesion: () => dispatch(actions.setSesion()),\n    onSetRedirect: (value) => dispatch(actions.setRedirect(value))\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.auth.redirect\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","import { spaceValidation } from './../../utility';\nimport { Cars } from './../../cars';\n\nexport const validation = data => {\n  let valid = true;\n  let errors = [];\n  if (!spaceValidation(data.user)) {\n    errors.push('Por favor introduzca el nombre de usuario.');\n    valid = false;\n  }  \n  if (!spaceValidation(data.pass)) {\n    errors.push('Por favor introduzca la contrasena');\n    valid = false;\n  }\n  return {valid: valid, errors: errors};\n}\n\nexport const validateData = data => {\n  let valid = true;\n  let errors = [];\n  if (Cars.user !== data.user) {\n    errors.push('Usuario incorrecto')\n    valid = false;\n  }\n  if (Cars.pass !== data.pass) {\n    errors.push('Contrasena incorrecta');\n    valid = false;\n  }\n  return {valid: valid, errors: errors};\n}","import * as actionTypes from './actionTypes';\n\n\nexport const setSesion = () => {\n  return {\n    type: actionTypes.SET_SESION\n  }\n}\n\nexport const setRedirect = value => {\n  return {\n    type: actionTypes.SET_REDIRECT,\n    value: value\n  }\n}","export const SET_SESION = 'SET_SESION';\nexport const SET_REDIRECT = 'SET_REDIRECT';","import React from 'react';\nimport {Row} from 'antd';\n\nconst DetailVehicle = props => {\n  const {vehicle} = props;\n  return (\n    <Row>\n      <p><strong>Marca:</strong> <span>{vehicle.brand}</span></p>\n      <p><strong>Año:</strong> <span>{vehicle.year}</span></p>\n      <p><strong>Origen:</strong> <span>{vehicle.madein}</span></p>\n      <p><strong>Velocidad máxima:</strong> <span>{vehicle.maxspeed}</span></p>\n      <p><strong>Estado:</strong> <span>{vehicle.status === 1 ? 'Activo' : 'Inactivo'}</span></p>\n      <p><strong>Descripcion:</strong> <span>{vehicle.description}</span></p>\n      <p><strong>Colores disponibles:</strong> <span>{vehicle.colors}</span></p>\n      <p><strong>Cantidad de puertas:</strong> <span>{vehicle.ports}</span></p>\n    </Row>\n  )\n}\n\nexport default DetailVehicle;","import { spaceValidation, preventLetters } from './../../../utility';\n\nexport const validation = data => {\n  let valid = true;\n  let errors = [];\n  if (!spaceValidation(data.brand)) {\n    errors.push('La marca del vehiculo no puede estar en blanco');\n    valid = false;\n  } else if (!spaceValidation(data.year)) {\n    errors.push('El ano del vehiculo no puede estar en blanco');\n    valid = false;\n  } else if (!spaceValidation(data.madein)) {\n    errors.push('El origen del vehiculo no puede estar en blanco');\n    valid = false;\n  } else if (!spaceValidation(data.maxspeed)) {\n    errors.push('La descripcion del vehiculo no puede estar en blanco');\n    valid = false;\n  } else if (!spaceValidation(data.description)) {\n    errors.push('La descripcion del vehiculo no puede estar en blanco');\n    valid = false;\n  } else if (!spaceValidation(data.colors)) {\n    errors.push('Debe agregar al menos 1 color');\n    valid = false;\n  } else if (!spaceValidation(data.ports)) {\n    errors.push('La cantidad de puertas no puede estar en blanco');\n    valid = false;\n  }\n  return {valid: valid, errors: errors}\n}\n\nexport const validYear = event => {\n  if (preventLetters(event)) {\n    if (event.target.value.length === 4) {\n      event.preventDefault()\n    }\n  }\n}","export default class Tags {\n\n  constructor() {\n    this.tags = new Array();\n  }\n\n  addTag = (tag) => {\n    if (this.tags.indexOf(tag) === -1) {\n      this.tags.push(tag)\n    }\n  }\n\n  removeTag = tag => {\n    const index = this.tags.indexOf(tag);\n    this.tags.splice(index, 1)\n  }\n\n  getTag = () => {\n    return this.tags;\n  }\n\n  existTag = tag => {\n    if (this.tags.indexOf(tag) !== -1) {\n      return true;\n    }\n    return false;\n  }\n}\n","import React from 'react';\nimport { Card, Form, Input, Alert, Button, Tag } from 'antd';\nimport { validation, validYear } from './validations';\nimport { preventLetters } from '../../../utility';\nimport {Cars} from './../../../cars';\nimport Tags from './../../../tags';\n\nclass NewVehicle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand: '',\n      year: '',\n      madein: '',\n      maxspeed: '',\n      description: '',\n      color: '',\n      ports: '',\n      errors: []\n    }\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    this.addColor = this.addColor.bind(this);\n    this.keyAddColor = this.keyAddColor.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  colors = new Tags();\n\n  inputChangeHandler(event) {\n    const name = event.target.name;\n    this.setState({[name]: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = {\n      brand: this.state.brand,\n      year: this.state.year,\n      madein: this.state.madein,\n      maxspeed: this.state.maxspeed,\n      description: this.state.description,\n      colors: this.colors.getTag().join(' / '),\n      ports: this.state.ports,\n      status: 1\n    };\n\n    const valid = validation(data);\n\n    if (!valid.valid) {\n      this.setState({errors: valid.errors})\n      return;\n    } \n\n    Cars.insertCar(data);\n    this.props.onSave();\n  }\n\n  addColor() {\n    this.colors.addTag(this.state.color)\n    this.setState({color: ''});\n  }\n\n  keyAddColor(event) {\n    if (event.which === 13) {\n      event.preventDefault()\n      if (this.colors.existTag(this.state.color)) { return; }\n      this.addColor();\n    }\n  }\n\n  render() {\n    const {brand, year, madein, maxspeed, description, color, ports, errors} = this.state;\n    const colors = this.colors.getTag();\n\n    return(\n      <Card>\n        <Form className=\"login-form\" id=\"components-form-demo-normal-login\">\n          <Form.Item>\n            <Input placeholder=\"Brand\" name=\"brand\" value={brand} onChange={this.inputChangeHandler} />\n          </Form.Item>\n\n          <Form.Item>\n            <Input placeholder=\"Year\" name=\"year\" value={year} onChange={this.inputChangeHandler} onKeyPress={validYear} />\n          </Form.Item>\n\n          <Form.Item>\n            <Input placeholder=\"Origen\" name=\"madein\" value={madein} onChange={this.inputChangeHandler} />\n          </Form.Item>\n\n          <Form.Item>\n            <Input placeholder=\"Velocidad maxima (Km)\" name=\"maxspeed\" value={maxspeed} onChange={this.inputChangeHandler} />\n          </Form.Item>\n\n          <Form.Item>\n            <Input placeholder=\"Descripcion\" name=\"description\" value={description} onChange={this.inputChangeHandler} />\n          </Form.Item>\n\n          <Form.Item>\n            <Input placeholder=\"Escriba un color y presione enter\" name=\"color\" value={color} onChange={this.inputChangeHandler} onKeyPress={this.keyAddColor} />\n\n            {colors.map((color, i) => (\n              <Tag closable={true} key={i}>{color}</Tag>\n            ))}\n          </Form.Item>\n\n          <Form.Item>\n            <Input placeholder=\"Cantidad de puertas\" name=\"ports\" value={ports} onChange={this.inputChangeHandler} onKeyPress={preventLetters} />\n          </Form.Item>\n\n          {errors.map((error, i) => (\n            <Alert\n              key={i}\n              message=\"Error\"\n              description={error}\n              type=\"error\"\n            />\n          ))}\n          <br />\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handleSubmit}>\n              Guardar\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    )\n  }\n}\n\nexport default NewVehicle;\n","import React from 'react';\nimport { Table, Modal, Button, Popconfirm } from 'antd';\nimport { Cars } from './../../cars';\nimport { success, error, searchIndexCars } from './../../utility';\nimport DetailVehicle from './../../Components/Vehicles/DetailVehicle/DetailVehicle';\nimport NewVehicle from './../../Components/Vehicles/NewVehicle/NewVehicle';\n\nconst { Column, ColumnGroup } = Table;\n\nclass Vehicles extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cars: [],\n      showFormNewVehicle: false,\n      showDetailVehicle: false,\n      vehicleCurrent: {}\n    }\n\n    this.orderCars = this.orderCars.bind(this);\n    this.delete = this.delete.bind(this);\n    this.switchFormNewVehicle = this.switchFormNewVehicle.bind(this);\n    this.switchDetailVehicle = this.switchDetailVehicle.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n    this.vehicleSaved = this.vehicleSaved.bind(this);\n  }\n\n  componentDidMount() {\n    this.orderCars()\n  }\n\n  orderCars() {\n    let data = []\n    Cars.getCars().forEach( (car, i) => {\n      car.key = car.id;\n      data.push((car))\n    })\n    this.setState({cars: data})\n  }\n\n  updateStatus(key, newStatus) {\n    let cars = [...this.state.cars]\n\n    try {\n      const index = searchIndexCars(key, cars);\n      cars[index].status = newStatus;\n      this.setState({cars: cars})\n      success(`El vehiculo ha sido ${newStatus === 1 ? 'Activado' : 'Desactivado'}`)\n    }catch(err) {\n      error('Vaya ;(, algo salio mal')\n    }\n  }\n\n  delete(key) {\n    let cars = [...this.state.cars];\n\n    try {\n      const index = searchIndexCars(key, cars);\n      cars.splice(index, 1);\n      this.setState({cars: cars});\n      success('El vehiculo ha sido eliminado de la lista.')\n    }catch(err) {\n      error('Vaya ;(, algo salio mal')\n    }\n  }\n\n  vehicleSaved() {\n    this.switchFormNewVehicle();\n    this.orderCars();\n    success('Se ha agregado un nuevo vehiculo a la lista.')\n  }\n\n  switchFormNewVehicle() {\n    this.setState({showFormNewVehicle: !this.state.showFormNewVehicle})\n  }\n\n  switchDetailVehicle(vehicle) {\n    this.setState({showDetailVehicle: !this.state.showDetailVehicle, vehicleCurrent: vehicle})\n  }\n\n  render() {\n    const {vehicleCurrent, showFormNewVehicle} = this.state;\n    return (\n      <>\n        <Table dataSource={this.state.cars}>\n          <ColumnGroup title=\"Cars\">\n            <Column\n              title=\"Brand\"\n              dataIndex=\"brand\"\n              key=\"brand\"\n            />\n            <Column\n              title=\"Year\"\n              dataIndex=\"year\"\n              key=\"year\"\n            />\n            <Column\n              title=\"Origen\"\n              dataIndex=\"madein\"\n              key=\"madein\"\n            />\n            <Column\n              title=\"Velocidad máxima\"\n              key=\"maxspeed\"\n              render={(record) => (\n                (`${record.maxspeed} km`)\n              )}\n            />\n            <Column\n              title=\"Estado\"\n              key=\"status\"\n              render={(record) => (\n                (record.status === 1 ? \"Activo\" : \"Inactivo\")\n              )}\n            />\n          </ColumnGroup>\n          <Column\n            render={(record) => (\n              <Button onClick={this.switchDetailVehicle.bind(this, record)}>Ver detalles</Button>\n            )}\n          />\n          <Column\n            render={(record) => (\n              (record.status === 0 ? \n                <Button type=\"primary\" onClick={this.updateStatus.bind(this, record.key, 1)}>Activar</Button> : \n                <Button type=\"danger\" onClick={this.updateStatus.bind(this, record.key, 0)}>Desactivar</Button>)\n            )}\n          />\n          <Column\n            render={(record) => (\n              <Popconfirm title=\"Esta seguro de eliminar este vehiculo de la lista?\" okText=\"Yes\" cancelText=\"No\" onConfirm={this.delete.bind(this, record.key)}>\n                <Button type=\"danger\">Eliminar</Button>\n              </Popconfirm>\n            )}\n          />\n        </Table>\n\n        <Button onClick={this.switchFormNewVehicle}>Crear Vehiculo</Button>\n\n        <Modal\n        title=\"Nuevo Vehiculo\"\n        visible={showFormNewVehicle}\n        onOk={this.handleOk}\n        onCancel={this.switchFormNewVehicle}\n        >\n          <NewVehicle onSave={this.vehicleSaved} />\n        </Modal>\n\n        <Modal\n        title=\"Detalles\"\n        visible={this.state.showDetailVehicle}\n        onOk={this.switchDetailVehicle.bind(this, {})}\n        onCancel={this.switchDetailVehicle.bind(this, {})}>\n          <DetailVehicle vehicle={vehicleCurrent} />\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default Vehicles;","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './../../Containers/Login/Login';\nimport Vehicles from './../../Containers/Vehicles/Vehicles';\n\nexport const RoutesWithSesion = () => (\n  <Switch>\n    <Route path=\"/vehicles\" component={Vehicles} />\n    <Route path=\"/\" component={Login} exact />\n    <Redirect to=\"/\" />\n  </Switch>\n)\n\nexport const RoutesWithoutSesion = () => (\n  <Switch>\n    <Route path=\"/\" component={Login} exact />\n    <Redirect to=\"/\" />\n  </Switch>\n)","import React from \"react\";\nimport \"./App.css\";\nimport { RoutesWithSesion, RoutesWithoutSesion } from './Components/Routes/Routes';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { loading: false };\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    return (\n      <>\n        {this.props.isAuthenticated ? <RoutesWithSesion /> : <RoutesWithoutSesion />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import * as actionTypes from './../actions/actionTypes';\nimport { updateObject } from './../../utility';\n\nconst initialState = {\n  isAuthenticated: false,\n  redirect: false\n}\n\nconst setSesion = (state, action) => {\n  return updateObject(state, {\n    isAuthenticated: true\n  })\n}\n\nconst setRedirect = (state, action) => {\n  return updateObject(state, {\n    redirect: false\n  })\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.SET_SESION: return setSesion(state, action);\n    case actionTypes.SET_REDIRECT: return setRedirect(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/auth';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/Curso-JS-React/build/\">\n      <App/>\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}